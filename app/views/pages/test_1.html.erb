<script>
  const dataArray = [5,11,18]
   // Creating our SVG canvas
  let svg = d3.select('body').append('svg')
              .attr('width', '100%')
              .attr('height', '100vh')

  svg.selectAll('rect') // returns all rectangles in the svg, or an empty array
      .data(dataArray) // binds array to found svg elements
      .enter() // any data not bound to a rectangle get put in this enter selection (in this case, 3)
      .append('rect') // adds a rectagle for each item in the enter selection
        .attr('width', '50')
        .attr('height', (d,i) => 15*d)
        .attr('x', (d,i) => {return 60 * i})
        .attr('y', (d,i) => 300-(15*d)) // inverts the bar graph. 300 px is bottom of graph, and you build bar from top to bottom

  let newX = 200 // horizontal offset for circles
  svg.selectAll('circle')
      .data(dataArray)
      .enter()
      .append('circle')
        .attr('r', (d,i) => d*2)
        .attr('cx', (d,i) => {
          newX += (d*4) + (10) // size of circle (double the radius) + offset for each circle
          return newX
        })
        .attr('cy', (d,i) => 150)

  newX = 400 // horizontal offset for ellipses
  svg.selectAll('ellipse')
    .data(dataArray)
    .enter()
    .append('ellipse')
      .attr('class', 'ellipsy')
      .attr('rx', (d,i) => 30)
      .attr('ry', (d,i) => d*2)
      .attr('cx', (d,i) => {
        newX += (30*2) + (10) // size of circle + offset for each circle
        return newX
      })
      .attr('cy', (d,i) => 150)

  newX = 600 // horizontal offset
  svg.selectAll('line')
    .data(dataArray)
    .enter()
    .append('line')
      .attr('stroke', 'blue')
      .attr('stroke-width', 2)
      .attr('x1', newX)
      .attr('y1', 300)
      .attr('x2', (d,i) => (d*20) + newX)
      .attr('y2', (d,i) => (300-(i*100)))
</script>

<script>
  const dataArray = [25,26,28,32,37,45,55,70,90,120,135,150,160,168,172,177,180];
  const dataYears = ['2000','2001','2002','2003','2004','2005','2006','2007','2008','2009','2010','2011','2012','2013','2014','2015','2016'];

  const height = 300
  const width = 500

  // Will be used to put margins on everything
  const margin = {left: 50, right: 50, top: 50, bottom: 0}

  // create scale for axis
  let y = d3.scaleLinear()
            .domain([0,d3.max(dataArray)])
            .range([height,0]) // invert this so I don't have to subtract later

  const parseDate = d3.timeParse('%Y') // creating a parser tool, puts dates in that format
  let x = d3.scaleTime()
            .domain(d3.extent(dataYears, (d) => parseDate(d))) // extent is a function that returns an array [min, max]
            .range([0, width]) // actual screen pixels

  // create axis generator
  const yAxis = d3.axisLeft(y)
  const xAxis = d3.axisBottom(x)

  // area generator
  let area = d3.area()
                .x((d,i) => x(parseDate(dataYears[i])))
                .y0(height)
                .y1((d,i) => y(d))
                .curve(d3.curveCardinal)

  let svg = d3.select('body').append('svg')
              .attr('height', '100vh')
              .attr('width', '100%')

  // chart and axis will be grouped and positioned together
  let chartGroup = svg.append('g')
                      .attr('transform', `translate(${margin.left}, ${margin.right})`)

  chartGroup.append('path')
            .attr('d', area(dataArray))

  chartGroup.append('g') // axis are groups
            .attr('class', 'axis y')
            .call(yAxis) // adding y axis to chart
  chartGroup.append('g') // axis are groups
            .attr('class', 'axis x')
            .attr('transform', `translate(0, ${height})`)
            .call(xAxis) // adding y axis to chart
</script>

